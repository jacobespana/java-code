package memoization;

/**
 *
 * @author Jacob Espana <joespana@neiu.edu>
 */
public class LongestCommonSubsequence 
{
    public static String[][] memo;
    
    public static void main(String[] args)
    {
        
        String chars = "GATC";
        String a = "";
        String b = "";
        for(int i=0;i<4;i++)
        {
            a += chars.charAt((int)(Math.random() * chars.length()));
            b += chars.charAt((int)(Math.random() * chars.length()));
        }
        memo = new String[a.length() + 1][b.length() + 1];
        String res = lcs(a, b, 0, 0);
        System.out.println("The common non-consecutive letters in " + a + " and " + b + " are\n" + res);
    }
    
    public static String lcs(String a, String b, int aIdx, int bIdx)
    {
        System.out.println(aIdx + "," + bIdx);
        if(memo[aIdx][bIdx]!=null)
        {
            return memo[aIdx][bIdx];
        }
        
        if(aIdx==a.length()||bIdx==b.length())
        {
            memo[aIdx][bIdx] = "";
            return "";
        }
        if(a.charAt(aIdx)==b.charAt(bIdx))
        {
            memo[aIdx][bIdx] = a.charAt(aIdx) + "";
            return a.charAt(aIdx) + lcs(a, b, aIdx+1, bIdx+1);
        }
        
        String aTemp = lcs(a, b, aIdx+1, bIdx);
        String bTemp = lcs(a, b, aIdx, bIdx+1);
       
        if(aTemp.length() > bTemp.length())
        {
            memo[aIdx][bIdx] = aTemp;
            return aTemp;
        }    
        else
        {
            memo[aIdx][bIdx] = bTemp;
            return bTemp;
        }
    }
}
